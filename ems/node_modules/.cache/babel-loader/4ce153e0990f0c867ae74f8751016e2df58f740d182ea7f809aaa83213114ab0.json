{"ast":null,"code":"var _jsxFileName = \"/Users/tatsuki/EmployeeManagementSystem/ems/src/MemberPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport \"./MemberPage.css\";\n\n// function MemberPage() {\n//   const [data, setData] = useState([]);\n//   const [sortOrder, setSortOrder] = useState(\"asc\");\n\n//   useEffect(() => {\n//     async function fetchData() {\n//       try {\n//         const response = await fetch(\n//           \"https://sheets.googleapis.com/v4/spreadsheets/1yajpuM9YfEqlHgGbDxYVQOcHrFfJYoTho1b1qoOME6Y/values/%E3%82%B7%E3%83%BC%E3%83%881?key=AIzaSyBoGN_ggnHtfZrcL1FX81HSWzQirXL8eyg\"\n//         );\n//         const result = await response.json();\n//         setData(result.values);\n//       } catch (error) {\n//         console.error(\"Error fetching the data\", error);\n//       }\n//     }\n\n//     fetchData();\n//   }, [sortOrder]);\n\n//   const handleSortOrderChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n//     setSortOrder(e.target.value);\n//   };\n\n//   return (\n//     <div className=\"MemberBackGround\">\n//       <Header />\n//       <SideMenu />\n//       <div className=\"sortBox\">\n//         <Box sx={{ minWidth: 100 }}>\n//           <FormControl fullWidth>\n//             <InputLabel variant=\"standard\" htmlFor=\"sorting-native\">\n//               並べ替え\n//             </InputLabel>\n//             <NativeSelect\n//               defaultValue=\"asc\"\n//               inputProps={{\n//                 name: \"sorting\",\n//                 id: \"sorting-native\",\n//               }}\n//             >\n//               <option value=\"asc\">入社日昇順</option>\n//               <option value=\"desc\">入社日降順</option>\n//             </NativeSelect>\n//           </FormControl>\n//         </Box>\n//       </div>\n//       <div className=\"profileArea\">\n//         {data.map((row, index) =>\n//           index !== 0 ? (\n//             <Link\n//               to={`/profile/${row[0]}`}\n//               key={index}\n//               className=\"profileContainer\"\n//             >\n//               <div className=\"memberFhotFrame\">\n//                 <img\n//                   className=\"memberFhoto\"\n//                   src={row[5] ? row[5] : \"/Noimage.png\"}\n//                   alt={`profile of employee ${index}`}\n//                 />\n//               </div>\n//               <p className=\"employeeNumber\">{row[0]}</p>\n//               <p className=\"employeeName\">{row[1]}</p>\n//               <p className=\"employeeFurigana\">{row[2]}</p>\n//             </Link>\n//           ) : null\n//         )}\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default MemberPage;\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction UserProfile() {\n  _s();\n  const {\n    userId\n  } = useParams(); // URLからuserIdを取得\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchUserData = async () => {\n      try {\n        // fetch処理...\n        const response = await fetch(\"https://sheets.googleapis.com/v4/spreadsheets/1yajpuM9YfEqlHgGbDxYVQOcHrFfJYoTho1b1qoOME6Y/values/%E3%82%B7%E3%83%BC%E3%83%881?key=AIzaSyBoGN_ggnHtfZrcL1FX81HSWzQirXL8eyg\");\n        const data = await response.json();\n\n        // ユーザーデータが見つかるかチェック\n        const userData = data.values.find(row => row[0] === userId);\n        if (userData) {\n          setUser(userData);\n        } else {\n          // ユーザーデータが見つからない場合の処理\n          setError(\"User not found\");\n        }\n      } catch (e) {\n        // エラー処理\n        setError(\"An error occurred while fetching user data\");\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchUserData();\n  }, [userId]);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 21\n  }, this);\n\n  // user[1], user[2], ... を使ってユーザーの詳細情報を表示\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"User Profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), user ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Name: \", user[1]]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }, this)\n    }, void 0, false) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"User not found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 5\n  }, this);\n}\n_s(UserProfile, \"Xju/9qJDv35H2fcWnYSs6+QCewA=\", false, function () {\n  return [useParams];\n});\n_c = UserProfile;\nvar _c;\n$RefreshReg$(_c, \"UserProfile\");","map":{"version":3,"names":["React","useEffect","useState","useParams","jsxDEV","_jsxDEV","Fragment","_Fragment","UserProfile","_s","userId","user","setUser","loading","setLoading","error","setError","fetchUserData","response","fetch","data","json","userData","values","find","row","e","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/tatsuki/EmployeeManagementSystem/ems/src/MemberPage.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useParams } from \"react-router-dom\";\nimport Header from \"./components/Header\";\nimport SideMenu from \"./components/SideMenu\";\nimport Box from \"@mui/material/Box\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport FormControl from \"@mui/material/FormControl\";\nimport NativeSelect from \"@mui/material/NativeSelect\";\nimport \"./MemberPage.css\";\n\n// function MemberPage() {\n//   const [data, setData] = useState([]);\n//   const [sortOrder, setSortOrder] = useState(\"asc\");\n\n//   useEffect(() => {\n//     async function fetchData() {\n//       try {\n//         const response = await fetch(\n//           \"https://sheets.googleapis.com/v4/spreadsheets/1yajpuM9YfEqlHgGbDxYVQOcHrFfJYoTho1b1qoOME6Y/values/%E3%82%B7%E3%83%BC%E3%83%881?key=AIzaSyBoGN_ggnHtfZrcL1FX81HSWzQirXL8eyg\"\n//         );\n//         const result = await response.json();\n//         setData(result.values);\n//       } catch (error) {\n//         console.error(\"Error fetching the data\", error);\n//       }\n//     }\n\n//     fetchData();\n//   }, [sortOrder]);\n\n//   const handleSortOrderChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n//     setSortOrder(e.target.value);\n//   };\n\n//   return (\n//     <div className=\"MemberBackGround\">\n//       <Header />\n//       <SideMenu />\n//       <div className=\"sortBox\">\n//         <Box sx={{ minWidth: 100 }}>\n//           <FormControl fullWidth>\n//             <InputLabel variant=\"standard\" htmlFor=\"sorting-native\">\n//               並べ替え\n//             </InputLabel>\n//             <NativeSelect\n//               defaultValue=\"asc\"\n//               inputProps={{\n//                 name: \"sorting\",\n//                 id: \"sorting-native\",\n//               }}\n//             >\n//               <option value=\"asc\">入社日昇順</option>\n//               <option value=\"desc\">入社日降順</option>\n//             </NativeSelect>\n//           </FormControl>\n//         </Box>\n//       </div>\n//       <div className=\"profileArea\">\n//         {data.map((row, index) =>\n//           index !== 0 ? (\n//             <Link\n//               to={`/profile/${row[0]}`}\n//               key={index}\n//               className=\"profileContainer\"\n//             >\n//               <div className=\"memberFhotFrame\">\n//                 <img\n//                   className=\"memberFhoto\"\n//                   src={row[5] ? row[5] : \"/Noimage.png\"}\n//                   alt={`profile of employee ${index}`}\n//                 />\n//               </div>\n//               <p className=\"employeeNumber\">{row[0]}</p>\n//               <p className=\"employeeName\">{row[1]}</p>\n//               <p className=\"employeeFurigana\">{row[2]}</p>\n//             </Link>\n//           ) : null\n//         )}\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default MemberPage;\n\nfunction UserProfile() {\n  const { userId } = useParams<Params>(); // URLからuserIdを取得\n  const [user, setUser] = useState<string[] | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    const fetchUserData = async () => {\n      try {\n        // fetch処理...\n        const response = await fetch(\n          \"https://sheets.googleapis.com/v4/spreadsheets/1yajpuM9YfEqlHgGbDxYVQOcHrFfJYoTho1b1qoOME6Y/values/%E3%82%B7%E3%83%BC%E3%83%881?key=AIzaSyBoGN_ggnHtfZrcL1FX81HSWzQirXL8eyg\"\n        );\n        const data = await response.json();\n\n        // ユーザーデータが見つかるかチェック\n        const userData = data.values.find((row: string[]) => row[0] === userId);\n        if (userData) {\n          setUser(userData);\n        } else {\n          // ユーザーデータが見つからない場合の処理\n          setError(\"User not found\");\n        }\n      } catch (e) {\n        // エラー処理\n        setError(\"An error occurred while fetching user data\");\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchUserData();\n  }, [userId]);\n\n  if (loading) return <div>Loading...</div>;\n  if (error) return <div>{error}</div>;\n\n  // user[1], user[2], ... を使ってユーザーの詳細情報を表示\n  return (\n    <div>\n      <h1>User Profile</h1>\n      {user ? (\n        <>\n          <p>Name: {user[1]}</p>\n          {/* その他のユーザー情報 */}\n        </>\n      ) : (\n        <p>User not found</p>\n      )}\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
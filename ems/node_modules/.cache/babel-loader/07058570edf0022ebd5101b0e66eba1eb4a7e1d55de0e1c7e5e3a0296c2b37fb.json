{"ast":null,"code":"var _jsxFileName = \"/Users/tatsuki/EmployeeManagementSystem/ems/src/components/SideMenu.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./SideMenu.css\";\n\n// SideMenuのPropsの型定義を更新します\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SideMenu() {\n  _s();\n  const [isOpen, setIsOpen] = useState(false);\n  const menuWidth = 250; // ここでサイドメニューの幅を定義\n\n  const toggleMenu = () => {\n    setIsOpen(!isOpen);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"menuToggle\",\n      onClick: toggleMenu,\n      style: {\n        left: isOpen ? `${menuWidth}px` : \"0\" // isOpenがtrueならメニューの幅の位置に、falseなら0の位置に\n      },\n      children: isOpen ? \"Close\" : \"Menu\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sideMenu\",\n      style: {\n        width: `${menuWidth}px`,\n        // メニューの幅\n        transform: isOpen ? \"translateX(0)\" : `translateX(-${menuWidth}px)` // isOpenがtrueなら表示、falseなら隠す\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n_s(SideMenu, \"+sus0Lb0ewKHdwiUhiTAJFoFyQ0=\");\n_c = SideMenu;\nexport default SideMenu;\nvar _c;\n$RefreshReg$(_c, \"SideMenu\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","SideMenu","_s","isOpen","setIsOpen","menuWidth","toggleMenu","children","className","onClick","style","left","fileName","_jsxFileName","lineNumber","columnNumber","width","transform","_c","$RefreshReg$"],"sources":["/Users/tatsuki/EmployeeManagementSystem/ems/src/components/SideMenu.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./SideMenu.css\";\n\n// SideMenuのPropsの型定義を更新します\ntype SideMenuProps = {\n  profileImageUrl: string;\n  // 他にPropsがあればここに追加します\n};\n\nfunction SideMenu() {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const menuWidth = 250; // ここでサイドメニューの幅を定義\n\n  const toggleMenu = () => {\n    setIsOpen(!isOpen);\n  };\n\n  return (\n    <div>\n      {/* メニュートグルボタン */}\n      <button\n        className=\"menuToggle\"\n        onClick={toggleMenu}\n        style={{\n          left: isOpen ? `${menuWidth}px` : \"0\", // isOpenがtrueならメニューの幅の位置に、falseなら0の位置に\n        }}\n      >\n        {isOpen ? \"Close\" : \"Menu\"}\n      </button>\n\n      {/* サイドメニュー */}\n      <div\n        className=\"sideMenu\"\n        style={{\n          width: `${menuWidth}px`, // メニューの幅\n          transform: isOpen ? \"translateX(0)\" : `translateX(-${menuWidth}px)`, // isOpenがtrueなら表示、falseなら隠す\n        }}\n      >\n        {/* メニューコンテンツ */}\n      </div>\n    </div>\n  );\n}\n\nexport default SideMenu;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,gBAAgB;;AAEvB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAMA,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;EAE3C,MAAMO,SAAS,GAAG,GAAG,CAAC,CAAC;;EAEvB,MAAMC,UAAU,GAAGA,CAAA,KAAM;IACvBF,SAAS,CAAC,CAACD,MAAM,CAAC;EACpB,CAAC;EAED,oBACEH,OAAA;IAAAO,QAAA,gBAEEP,OAAA;MACEQ,SAAS,EAAC,YAAY;MACtBC,OAAO,EAAEH,UAAW;MACpBI,KAAK,EAAE;QACLC,IAAI,EAAER,MAAM,GAAI,GAAEE,SAAU,IAAG,GAAG,GAAG,CAAE;MACzC,CAAE;MAAAE,QAAA,EAEDJ,MAAM,GAAG,OAAO,GAAG;IAAM;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpB,CAAC,eAGTf,OAAA;MACEQ,SAAS,EAAC,UAAU;MACpBE,KAAK,EAAE;QACLM,KAAK,EAAG,GAAEX,SAAU,IAAG;QAAE;QACzBY,SAAS,EAAEd,MAAM,GAAG,eAAe,GAAI,eAAcE,SAAU,KAAI,CAAE;MACvE;IAAE;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACb,EAAA,CAlCQD,QAAQ;AAAAiB,EAAA,GAARjB,QAAQ;AAoCjB,eAAeA,QAAQ;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
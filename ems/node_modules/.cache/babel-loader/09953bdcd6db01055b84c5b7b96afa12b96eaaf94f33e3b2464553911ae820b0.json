{"ast":null,"code":"var _jsxFileName = \"/Users/tatsuki/EmployeeManagementSystem/ems/src/UserProfile.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// 各ユーザーのデータ型\n\nfunction UserProfile() {\n  _s();\n  const {\n    userId\n  } = useParams();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        // APIからデータを取得\n        const response = await fetch(\"https://sheets.googleapis.com/v4/spreadsheets/1yajpuM9YfEqlHgGbDxYVQOcHrFfJYoTho1b1qoOME6Y/values/%E3%82%B7%E3%83%BC%E3%83%881?key=AIzaSyBoGN_ggnHtfZrcL1FX81HSWzQirXL8eyg\");\n        if (!response.ok) {\n          throw new Error(`Error: ${response.status} ${response.statusText}`);\n        }\n        const result = await response.json();\n        if (!result.values || !Array.isArray(result.values)) {\n          throw new Error(\"No data available\");\n        }\n\n        // ユーザーを検索\n        const userData = result.values.find(row => row[0] === userId);\n        if (userData) {\n          setUser(userData);\n        } else {\n          setUser(null);\n          setError(\"User not found\");\n        }\n      } catch (err) {\n        if (err instanceof Error) {\n          setError(err.message);\n        } else {\n          setError(\"An unexpected error occurred\");\n        }\n        setUser(null);\n      } finally {\n        setLoading(false);\n      }\n    }\n    fetchData();\n  }, [userId]);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading user data...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 21\n  }, this);\n  if (!user) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"User not found\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"User Profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Name: \", user[1]]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Image: \", user[5]]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n_s(UserProfile, \"Xju/9qJDv35H2fcWnYSs6+QCewA=\", false, function () {\n  return [useParams];\n});\n_c = UserProfile;\nexport default UserProfile;\nvar _c;\n$RefreshReg$(_c, \"UserProfile\");","map":{"version":3,"names":["React","useEffect","useState","useParams","jsxDEV","_jsxDEV","UserProfile","_s","userId","user","setUser","loading","setLoading","error","setError","fetchData","response","fetch","ok","Error","status","statusText","result","json","values","Array","isArray","userData","find","row","err","message","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/tatsuki/EmployeeManagementSystem/ems/src/UserProfile.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\ntype Params = {\n  userId: string;\n};\n\ntype User = string[]; // 各ユーザーのデータ型\n\nfunction UserProfile() {\n  const { userId } = useParams<Params>();\n  const [user, setUser] = useState<User | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        // APIからデータを取得\n        const response = await fetch(\n          \"https://sheets.googleapis.com/v4/spreadsheets/1yajpuM9YfEqlHgGbDxYVQOcHrFfJYoTho1b1qoOME6Y/values/%E3%82%B7%E3%83%BC%E3%83%881?key=AIzaSyBoGN_ggnHtfZrcL1FX81HSWzQirXL8eyg\"\n        );\n        if (!response.ok) {\n          throw new Error(`Error: ${response.status} ${response.statusText}`);\n        }\n\n        const result = await response.json();\n        if (!result.values || !Array.isArray(result.values)) {\n          throw new Error(\"No data available\");\n        }\n\n        // ユーザーを検索\n        const userData = result.values.find((row: User) => row[0] === userId);\n\n        if (userData) {\n          setUser(userData);\n        } else {\n          setUser(null);\n          setError(\"User not found\");\n        }\n      } catch (err) {\n        if (err instanceof Error) {\n          setError(err.message);\n        } else {\n          setError(\"An unexpected error occurred\");\n        }\n        setUser(null);\n      } finally {\n        setLoading(false);\n      }\n    }\n\n    fetchData();\n  }, [userId]);\n\n  if (loading) return <div>Loading user data...</div>;\n  if (error) return <div>Error: {error}</div>;\n  if (!user) return <div>User not found</div>;\n\n  return (\n    <div>\n      <h1>User Profile</h1>\n      <p>Name: {user[1]}</p>\n      <p>Image: {user[5]}</p>\n      {/* 必要に応じて他のユーザー情報を表示 */}\n    </div>\n  );\n}\n\nexport default UserProfile;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
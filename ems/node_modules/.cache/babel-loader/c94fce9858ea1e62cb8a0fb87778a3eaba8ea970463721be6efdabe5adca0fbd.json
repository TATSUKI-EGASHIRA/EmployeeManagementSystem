{"ast":null,"code":"var _jsxFileName = \"/Users/tatsuki/EmployeeManagementSystem/ems/src/components/SideMenu.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./SideMenu.css\";\nimport ChevronRightIcon from \"@mui/icons-material/ChevronRight\";\nimport PersonIcon from \"@mui/icons-material/Person\";\n\n// propsでprofileImageUrlを受け取る\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction SideMenu({\n  profileImageUrl\n}) {\n  _s();\n  const [isOpen, setIsOpen] = useState(false);\n  const menuWidth = 250; // ここでサイドメニューの幅を定義\n\n  const toggleMenu = () => {\n    setIsOpen(!isOpen);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"overlay\",\n      onClick: toggleMenu // オーバーレイをクリックするとメニューが閉じる\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"menuToggleArea\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"menuToggle\",\n        onClick: toggleMenu,\n        style: {\n          left: isOpen ? `${menuWidth}px` : \"0\" // isOpenがtrueならメニューの幅の位置に、falseなら0の位置に\n        },\n        children: isOpen ? /*#__PURE__*/_jsxDEV(ChevronRightIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this) : /*#__PURE__*/_jsxDEV(PersonIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 44\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sideMenu\",\n        style: {\n          width: `${menuWidth}px`,\n          // メニューの幅\n          transform: isOpen ? \"translateX(0)\" : `translateX(-${menuWidth}px)` // isOpenがtrueなら表示、falseなら隠す\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profileImageContainer\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"memberFhoto\",\n            src: profileImageUrl || NoImage,\n            alt: \"Profile\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(SideMenu, \"+sus0Lb0ewKHdwiUhiTAJFoFyQ0=\");\n_c = SideMenu;\nexport default SideMenu;\nvar _c;\n$RefreshReg$(_c, \"SideMenu\");","map":{"version":3,"names":["React","useState","ChevronRightIcon","PersonIcon","jsxDEV","_jsxDEV","Fragment","_Fragment","SideMenu","profileImageUrl","_s","isOpen","setIsOpen","menuWidth","toggleMenu","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","style","left","width","transform","src","NoImage","alt","_c","$RefreshReg$"],"sources":["/Users/tatsuki/EmployeeManagementSystem/ems/src/components/SideMenu.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./SideMenu.css\";\nimport ChevronRightIcon from \"@mui/icons-material/ChevronRight\";\nimport PersonIcon from \"@mui/icons-material/Person\";\n\n// propsでprofileImageUrlを受け取る\nfunction SideMenu({ profileImageUrl }: { profileImageUrl: string }) {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const menuWidth = 250; // ここでサイドメニューの幅を定義\n\n  const toggleMenu = () => {\n    setIsOpen(!isOpen);\n  };\n\n  return (\n    <>\n      {/* オーバーレイ */}\n      {isOpen && (\n        <div\n          className=\"overlay\"\n          onClick={toggleMenu} // オーバーレイをクリックするとメニューが閉じる\n        />\n      )}\n\n      <div className=\"menuToggleArea\">\n        {/* メニュートグルボタン */}\n        <button\n          className=\"menuToggle\"\n          onClick={toggleMenu}\n          style={{\n            left: isOpen ? `${menuWidth}px` : \"0\", // isOpenがtrueならメニューの幅の位置に、falseなら0の位置に\n          }}\n        >\n          {isOpen ? <ChevronRightIcon /> : <PersonIcon />}\n        </button>\n\n        {/* サイドメニュー */}\n        <div\n          className=\"sideMenu\"\n          style={{\n            width: `${menuWidth}px`, // メニューの幅\n            transform: isOpen ? \"translateX(0)\" : `translateX(-${menuWidth}px)`, // isOpenがtrueなら表示、falseなら隠す\n          }}\n        >\n          {/* メニューコンテンツ */}\n          {/* プロフィール画像 */}\n          <div className=\"profileImageContainer\">\n            <img\n              className=\"memberFhoto\"\n              src={profileImageUrl || NoImage}\n              alt=\"Profile\"\n            />\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default SideMenu;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,gBAAgB;AACvB,OAAOC,gBAAgB,MAAM,kCAAkC;AAC/D,OAAOC,UAAU,MAAM,4BAA4B;;AAEnD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AACA,SAASC,QAAQA,CAAC;EAAEC;AAA6C,CAAC,EAAE;EAAAC,EAAA;EAClE,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAE3C,MAAMY,SAAS,GAAG,GAAG,CAAC,CAAC;;EAEvB,MAAMC,UAAU,GAAGA,CAAA,KAAM;IACvBF,SAAS,CAAC,CAACD,MAAM,CAAC;EACpB,CAAC;EAED,oBACEN,OAAA,CAAAE,SAAA;IAAAQ,QAAA,GAEGJ,MAAM,iBACLN,OAAA;MACEW,SAAS,EAAC,SAAS;MACnBC,OAAO,EAAEH,UAAW,CAAC;IAAA;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtB,CACF,eAEDhB,OAAA;MAAKW,SAAS,EAAC,gBAAgB;MAAAD,QAAA,gBAE7BV,OAAA;QACEW,SAAS,EAAC,YAAY;QACtBC,OAAO,EAAEH,UAAW;QACpBQ,KAAK,EAAE;UACLC,IAAI,EAAEZ,MAAM,GAAI,GAAEE,SAAU,IAAG,GAAG,GAAG,CAAE;QACzC,CAAE;QAAAE,QAAA,EAEDJ,MAAM,gBAAGN,OAAA,CAACH,gBAAgB;UAAAgB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,gBAAGhB,OAAA,CAACF,UAAU;UAAAe,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzC,CAAC,eAGThB,OAAA;QACEW,SAAS,EAAC,UAAU;QACpBM,KAAK,EAAE;UACLE,KAAK,EAAG,GAAEX,SAAU,IAAG;UAAE;UACzBY,SAAS,EAAEd,MAAM,GAAG,eAAe,GAAI,eAAcE,SAAU,KAAI,CAAE;QACvE,CAAE;QAAAE,QAAA,eAIFV,OAAA;UAAKW,SAAS,EAAC,uBAAuB;UAAAD,QAAA,eACpCV,OAAA;YACEW,SAAS,EAAC,aAAa;YACvBU,GAAG,EAAEjB,eAAe,IAAIkB,OAAQ;YAChCC,GAAG,EAAC;UAAS;YAAAV,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACd;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA,eACN,CAAC;AAEP;AAACX,EAAA,CApDQF,QAAQ;AAAAqB,EAAA,GAARrB,QAAQ;AAsDjB,eAAeA,QAAQ;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
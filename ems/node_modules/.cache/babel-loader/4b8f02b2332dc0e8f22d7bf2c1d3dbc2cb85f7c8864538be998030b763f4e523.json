{"ast":null,"code":"var _jsxFileName = \"/Users/tatsuki/EmployeeManagementSystem/ems/src/UserProfile.tsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UserProfile() {\n  _s();\n  const {\n    id\n  } = useParams(); // URLからidを取得\n  const user = useSelector(state => selectUserById(state, id)); // セレクター関数を使ってユーザー情報を取得\n\n  if (!user) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 12\n    }, this); // ユーザーデータが見つからない場合の処理\n  }\n\n  // ここでuser[1], user[2], ... を使って、ユーザーの詳細情報を表示します\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"User Profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Name: \", user[1]]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}\n_s(UserProfile, \"ILGHxOP/RI0UNm7939sMMsW5ulY=\", false, function () {\n  return [useParams, useSelector];\n});\n_c = UserProfile;\nexport default UserProfile;\nvar _c;\n$RefreshReg$(_c, \"UserProfile\");","map":{"version":3,"names":["React","useSelector","useParams","jsxDEV","_jsxDEV","UserProfile","_s","id","user","state","selectUserById","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/tatsuki/EmployeeManagementSystem/ems/src/UserProfile.tsx"],"sourcesContent":["import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\n\nfunction UserProfile() {\n  const { id } = useParams(); // URLからidを取得\n  const user = useSelector((state) => selectUserById(state, id)); // セレクター関数を使ってユーザー情報を取得\n\n  if (!user) {\n    return <div>Loading...</div>; // ユーザーデータが見つからない場合の処理\n  }\n\n  // ここでuser[1], user[2], ... を使って、ユーザーの詳細情報を表示します\n  return (\n    <div>\n      <h1>User Profile</h1>\n      {/* 例えば、名前が user 配列の 1 番目の要素にあるとします */}\n      <p>Name: {user[1]}</p>\n      {/* その他のユーザー情報 */}\n    </div>\n  );\n}\n\nexport default UserProfile;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACrB,MAAM;IAAEC;EAAG,CAAC,GAAGL,SAAS,CAAC,CAAC,CAAC,CAAC;EAC5B,MAAMM,IAAI,GAAGP,WAAW,CAAEQ,KAAK,IAAKC,cAAc,CAACD,KAAK,EAAEF,EAAE,CAAC,CAAC,CAAC,CAAC;;EAEhE,IAAI,CAACC,IAAI,EAAE;IACT,oBAAOJ,OAAA;MAAAO,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,CAAC,CAAC;EAChC;;EAEA;EACA,oBACEX,OAAA;IAAAO,QAAA,gBACEP,OAAA;MAAAO,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAErBX,OAAA;MAAAO,QAAA,GAAG,QAAM,EAACH,IAAI,CAAC,CAAC,CAAC;IAAA;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEnB,CAAC;AAEV;AAACT,EAAA,CAjBQD,WAAW;EAAA,QACHH,SAAS,EACXD,WAAW;AAAA;AAAAe,EAAA,GAFjBX,WAAW;AAmBpB,eAAeA,WAAW;AAAC,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
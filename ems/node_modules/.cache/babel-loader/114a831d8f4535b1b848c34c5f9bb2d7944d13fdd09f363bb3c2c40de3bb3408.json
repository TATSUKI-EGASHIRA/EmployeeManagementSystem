{"ast":null,"code":"var _jsxFileName = \"/Users/tatsuki/EmployeeManagementSystem/ems/src/UserProfile.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UserProfile() {\n  _s();\n  const {\n    userId\n  } = useParams();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const response = await fetch(\"https://sheets.googleapis.com/v4/spreadsheets/1yajpuM9YfEqlHgGbDxYVQOcHrFfJYoTho1b1qoOME6Y/values/%E3%82%B7%E3%83%BC%E3%83%881?key=AIzaSyBoGN_ggnHtfZrcL1FX81HSWzQirXL8eyg\");\n        const result = await response.json();\n\n        // JSONデータをログに出力して確認\n        console.log(result);\n\n        // useParamsで取得したuserIdをログに出力して確認\n        console.log(\"UserID from URL:\", userId);\n\n        // JSONデータ内のユーザーIDと一致するものを検索\n        const userData = result.values.find(row => row[0] === userId);\n\n        // 検索結果をログに出力して確認\n        if (userData) {\n          console.log(\"User Data:\", userData);\n          // ...ユーザーデータを設定...\n        } else {\n          console.log(\"User not found.\");\n          // ...ユーザーが見つからない場合の処理...\n        }\n      } catch (error) {\n        console.error(\"Error fetching the data:\", error);\n      }\n    }\n    fetchData();\n  }, [userId]); // 依存配列にuserIdを含める\n\n  // useEffect(() => {\n  //   const fetchUserData = async () => {\n  //     setLoading(true); // ローディング状態の開始\n  //     try {\n  //       // APIからのレスポンスを待ちます。\n  //       const response = await fetch(\n  //         \"https://sheets.googleapis.com/v4/spreadsheets/1yajpuM9YfEqlHgGbDxYVQOcHrFfJYoTho1b1qoOME6Y/values/%E3%82%B7%E3%83%BC%E3%83%881?key=AIzaSyBoGN_ggnHtfZrcL1FX81HSWzQirXL8eyg\"\n  //       );\n  //       // レスポンスのJSONを取得します。\n  //       const data = await response.json();\n  //       // データからuserIdに該当するユーザー情報を検索します。\n  //       const userData = data.values.find((row: string[]) => row[0] === userId);\n  //       setUser(userData); // ユーザーデータをセットします。\n  //     } catch (error) {\n  //       console.error(\"An error occurred while fetching user data:\", error);\n  //     } finally {\n  //       setLoading(false); // ローディング状態の終了\n  //     }\n  //   };\n\n  //   fetchUserData();\n  // }, [userId]);\n\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading user data...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 23\n  }, this);\n  if (!user) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"User not found\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"User Profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Name: \", user && user[1]]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n_s(UserProfile, \"AAtcRp5zw4kgD0nAoHemtUZg/9I=\", false, function () {\n  return [useParams];\n});\n_c = UserProfile;\nexport default UserProfile;\nvar _c;\n$RefreshReg$(_c, \"UserProfile\");","map":{"version":3,"names":["React","useEffect","useState","useParams","jsxDEV","_jsxDEV","UserProfile","_s","userId","user","setUser","loading","setLoading","fetchData","response","fetch","result","json","console","log","userData","values","find","row","error","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/tatsuki/EmployeeManagementSystem/ems/src/UserProfile.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\ntype Params = {\n  userId: string;\n};\n\nfunction UserProfile() {\n  const { userId } = useParams<Params>();\n  const [user, setUser] = useState<string[] | null>(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const response = await fetch(\n          \"https://sheets.googleapis.com/v4/spreadsheets/1yajpuM9YfEqlHgGbDxYVQOcHrFfJYoTho1b1qoOME6Y/values/%E3%82%B7%E3%83%BC%E3%83%881?key=AIzaSyBoGN_ggnHtfZrcL1FX81HSWzQirXL8eyg\"\n        );\n        const result = await response.json();\n\n        // JSONデータをログに出力して確認\n        console.log(result);\n\n        // useParamsで取得したuserIdをログに出力して確認\n        console.log(\"UserID from URL:\", userId);\n\n        // JSONデータ内のユーザーIDと一致するものを検索\n        const userData = result.values.find((row) => row[0] === userId);\n\n        // 検索結果をログに出力して確認\n        if (userData) {\n          console.log(\"User Data:\", userData);\n          // ...ユーザーデータを設定...\n        } else {\n          console.log(\"User not found.\");\n          // ...ユーザーが見つからない場合の処理...\n        }\n      } catch (error) {\n        console.error(\"Error fetching the data:\", error);\n      }\n    }\n\n    fetchData();\n  }, [userId]); // 依存配列にuserIdを含める\n\n  // useEffect(() => {\n  //   const fetchUserData = async () => {\n  //     setLoading(true); // ローディング状態の開始\n  //     try {\n  //       // APIからのレスポンスを待ちます。\n  //       const response = await fetch(\n  //         \"https://sheets.googleapis.com/v4/spreadsheets/1yajpuM9YfEqlHgGbDxYVQOcHrFfJYoTho1b1qoOME6Y/values/%E3%82%B7%E3%83%BC%E3%83%881?key=AIzaSyBoGN_ggnHtfZrcL1FX81HSWzQirXL8eyg\"\n  //       );\n  //       // レスポンスのJSONを取得します。\n  //       const data = await response.json();\n  //       // データからuserIdに該当するユーザー情報を検索します。\n  //       const userData = data.values.find((row: string[]) => row[0] === userId);\n  //       setUser(userData); // ユーザーデータをセットします。\n  //     } catch (error) {\n  //       console.error(\"An error occurred while fetching user data:\", error);\n  //     } finally {\n  //       setLoading(false); // ローディング状態の終了\n  //     }\n  //   };\n\n  //   fetchUserData();\n  // }, [userId]);\n\n  if (loading) return <div>Loading user data...</div>;\n  if (!user) return <div>User not found</div>;\n\n  return (\n    <div>\n      <h1>User Profile</h1>\n      {/* userがnullではないことが保証されているので、nullチェックをせずにアクセスします */}\n      <p>Name: {user && user[1]}</p>\n      {/* その他のユーザー情報 */}\n    </div>\n  );\n}\n\nexport default UserProfile;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAM7C,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACrB,MAAM;IAAEC;EAAO,CAAC,GAAGL,SAAS,CAAS,CAAC;EACtC,MAAM,CAACM,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAkB,IAAI,CAAC;EACvD,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACd,eAAeY,SAASA,CAAA,EAAG;MACzB,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,4KACF,CAAC;QACD,MAAMC,MAAM,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;;QAEpC;QACAC,OAAO,CAACC,GAAG,CAACH,MAAM,CAAC;;QAEnB;QACAE,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEX,MAAM,CAAC;;QAEvC;QACA,MAAMY,QAAQ,GAAGJ,MAAM,CAACK,MAAM,CAACC,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAAC,CAAC,CAAC,KAAKf,MAAM,CAAC;;QAE/D;QACA,IAAIY,QAAQ,EAAE;UACZF,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEC,QAAQ,CAAC;UACnC;QACF,CAAC,MAAM;UACLF,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;UAC9B;QACF;MACF,CAAC,CAAC,OAAOK,KAAK,EAAE;QACdN,OAAO,CAACM,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAClD;IACF;IAEAX,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAACL,MAAM,CAAC,CAAC,CAAC,CAAC;;EAEd;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;;EAEA,IAAIG,OAAO,EAAE,oBAAON,OAAA;IAAAoB,QAAA,EAAK;EAAoB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EACnD,IAAI,CAACpB,IAAI,EAAE,oBAAOJ,OAAA;IAAAoB,QAAA,EAAK;EAAc;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EAE3C,oBACExB,OAAA;IAAAoB,QAAA,gBACEpB,OAAA;MAAAoB,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAErBxB,OAAA;MAAAoB,QAAA,GAAG,QAAM,EAAChB,IAAI,IAAIA,IAAI,CAAC,CAAC,CAAC;IAAA;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAE3B,CAAC;AAEV;AAACtB,EAAA,CAxEQD,WAAW;EAAA,QACCH,SAAS;AAAA;AAAA2B,EAAA,GADrBxB,WAAW;AA0EpB,eAAeA,WAAW;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
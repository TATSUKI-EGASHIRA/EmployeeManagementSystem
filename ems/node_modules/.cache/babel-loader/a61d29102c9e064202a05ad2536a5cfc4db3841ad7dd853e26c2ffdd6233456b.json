{"ast":null,"code":"var _jsxFileName = \"/Users/tatsuki/EmployeeManagementSystem/ems/src/UserProfile.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// ここでユーザーの型を定義します\n\nfunction UserProfile() {\n  _s();\n  const {\n    userId\n  } = useParams();\n  const [user, setUser] = useState(null);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const response = await fetch(\"https://sheets.googleapis.com/v4/spreadsheets/1yajpuM9YfEqlHgGbDxYVQOcHrFfJYoTho1b1qoOME6Y/values/%E3%82%B7%E3%83%BC%E3%83%881?key=AIzaSyBoGN_ggnHtfZrcL1FX81HSWzQirXL8eyg\");\n        const result = await response.json();\n        if (!result.values) {\n          throw new Error(\"No data available\");\n        }\n\n        // useParamsで取得したuserIdを数値に変換して比較\n        const userData = result.values.find(row => parseInt(row[0], 10) === parseInt(userId, 10));\n        if (userData) {\n          setUser(userData);\n        } else {\n          setError(\"User not found.\");\n          setUser(null);\n        }\n      } catch (err) {\n        if (err instanceof Error) {\n          setError(err.message);\n        } else {\n          setError(\"An unknown error occurred\");\n        }\n        setUser(null);\n      } finally {\n        setLoading(false);\n      }\n    }\n    fetchData();\n  }, [userId]);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading user data...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 21\n  }, this);\n  if (!user) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"User not found\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"User Profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"ID: \", row[0]]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Name: \", user[1]]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n_s(UserProfile, \"VGluBFqlMBT3TaO1isSYN1+O9Wo=\", false, function () {\n  return [useParams];\n});\n_c = UserProfile;\nexport default UserProfile;\nvar _c;\n$RefreshReg$(_c, \"UserProfile\");","map":{"version":3,"names":["React","useEffect","useState","useParams","jsxDEV","_jsxDEV","UserProfile","_s","userId","user","setUser","error","setError","loading","setLoading","fetchData","response","fetch","result","json","values","Error","userData","find","row","parseInt","err","message","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/tatsuki/EmployeeManagementSystem/ems/src/UserProfile.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\ntype Params = {\n  userId: string;\n};\n\ntype User = string[]; // ここでユーザーの型を定義します\n\nfunction UserProfile() {\n  const { userId } = useParams<Params>();\n  const [user, setUser] = useState<User | null>(null);\n  const [error, setError] = useState<string | null>(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const response = await fetch(\n          \"https://sheets.googleapis.com/v4/spreadsheets/1yajpuM9YfEqlHgGbDxYVQOcHrFfJYoTho1b1qoOME6Y/values/%E3%82%B7%E3%83%BC%E3%83%881?key=AIzaSyBoGN_ggnHtfZrcL1FX81HSWzQirXL8eyg\"\n        );\n        const result = await response.json();\n\n        if (!result.values) {\n          throw new Error(\"No data available\");\n        }\n\n        // useParamsで取得したuserIdを数値に変換して比較\n        const userData = result.values.find(\n          (row: User) => parseInt(row[0], 10) === parseInt(userId, 10)\n        );\n\n        if (userData) {\n          setUser(userData);\n        } else {\n          setError(\"User not found.\");\n          setUser(null);\n        }\n      } catch (err) {\n        if (err instanceof Error) {\n          setError(err.message);\n        } else {\n          setError(\"An unknown error occurred\");\n        }\n        setUser(null);\n      } finally {\n        setLoading(false);\n      }\n    }\n\n    fetchData();\n  }, [userId]);\n\n  if (loading) return <div>Loading user data...</div>;\n  if (error) return <div>Error: {error}</div>;\n  if (!user) return <div>User not found</div>;\n\n  return (\n    <div>\n      <h1>User Profile</h1>\n      <p>ID: {row[0]}</p>\n      <p>Name: {user[1]}</p>\n      {/* その他のユーザー情報を表示 */}\n    </div>\n  );\n}\n\nexport default UserProfile;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
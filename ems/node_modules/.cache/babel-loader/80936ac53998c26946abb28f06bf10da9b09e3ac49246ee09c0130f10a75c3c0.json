{"ast":null,"code":"var _jsxFileName = \"/Users/tatsuki/EmployeeManagementSystem/ems/src/UserProfile.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\n// ユーザー情報の型を定義（ここではすべてのフィールドが文字列であると仮定）\n\n// URLパラメータの型を定義\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UserProfile() {\n  _s();\n  const {\n    userId\n  } = useParams();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        // ここには実際のAPIリクエストのURLを入れてください\n        const apiUrl = `https://sheets.googleapis.com/v4/spreadsheets/1yajpuM9YfEqlHgGbDxYVQOcHrFfJYoTho1b1qoOME6Y/values/%E3%82%B7%E3%83%BC%E3%83%881?key=AIzaSyBoGN_ggnHtfZrcL1FX81HSWzQirXL8eyg`;\n        const response = await fetch(apiUrl);\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const data = await response.json();\n\n        // ここでの data.values は、スプレッドシートAPIからの想定される応答形式です。\n        // 実際の応答に合わせて適宜調整してください。\n        const userData = data.values.find(row => row.id === userId);\n        if (userData) {\n          setUser(userData);\n        } else {\n          setError(\"User not found\");\n          setUser(null);\n        }\n      } catch (err) {\n        setError(err.message);\n        setUser(null);\n      } finally {\n        setLoading(false);\n      }\n    }\n    fetchData();\n  }, [userId]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading user data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 12\n    }, this);\n  }\n  if (!user) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"User not found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 12\n    }, this);\n  }\n\n  // ユーザー情報がある場合のレンダリング\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"User Profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"ID: \", user.id]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Name: \", user.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Japanese Name: \", user.jpName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Age: \", user.age]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Gender: \", user.gender]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), user.image && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: user.image,\n      alt: `${user.name} profile`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 22\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Detail: \", user.detail]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Joining Date: \", user.joiningDate]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Employment Type: \", user.employmentType]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Permission Level: \", user.permissionLevel]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n_s(UserProfile, \"Xju/9qJDv35H2fcWnYSs6+QCewA=\", false, function () {\n  return [useParams];\n});\n_c = UserProfile;\nexport default UserProfile;\nvar _c;\n$RefreshReg$(_c, \"UserProfile\");","map":{"version":3,"names":["React","useEffect","useState","useParams","jsxDEV","_jsxDEV","UserProfile","_s","userId","user","setUser","loading","setLoading","error","setError","fetchData","apiUrl","response","fetch","ok","Error","status","data","json","userData","values","find","row","id","err","message","children","fileName","_jsxFileName","lineNumber","columnNumber","name","jpName","age","gender","image","src","alt","detail","joiningDate","employmentType","permissionLevel","_c","$RefreshReg$"],"sources":["/Users/tatsuki/EmployeeManagementSystem/ems/src/UserProfile.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\n// ユーザー情報の型を定義（ここではすべてのフィールドが文字列であると仮定）\ntype User = {\n  id: string;\n  name: string;\n  jpName: string;\n  age: string;\n  gender: string;\n  image: string;\n  pass: string;\n  authority: string;\n  detail: string;\n  joiningDate: string;\n  employmentType: string;\n  permissionLevel: string;\n};\n\n// URLパラメータの型を定義\ntype Params = {\n  userId: string;\n};\n\nfunction UserProfile() {\n  const { userId } = useParams<Params>();\n  const [user, setUser] = useState<User | null>(null);\n  const [loading, setLoading] = useState<boolean>(true);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        // ここには実際のAPIリクエストのURLを入れてください\n        const apiUrl = `https://sheets.googleapis.com/v4/spreadsheets/1yajpuM9YfEqlHgGbDxYVQOcHrFfJYoTho1b1qoOME6Y/values/%E3%82%B7%E3%83%BC%E3%83%881?key=AIzaSyBoGN_ggnHtfZrcL1FX81HSWzQirXL8eyg`;\n        const response = await fetch(apiUrl);\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const data = await response.json();\n\n        // ここでの data.values は、スプレッドシートAPIからの想定される応答形式です。\n        // 実際の応答に合わせて適宜調整してください。\n        const userData = data.values.find((row: User) => row.id === userId);\n\n        if (userData) {\n          setUser(userData);\n        } else {\n          setError(\"User not found\");\n          setUser(null);\n        }\n      } catch (err) {\n        setError(err.message);\n        setUser(null);\n      } finally {\n        setLoading(false);\n      }\n    }\n\n    fetchData();\n  }, [userId]);\n\n  if (loading) {\n    return <div>Loading user data...</div>;\n  }\n\n  if (error) {\n    return <div>Error: {error}</div>;\n  }\n\n  if (!user) {\n    return <div>User not found.</div>;\n  }\n\n  // ユーザー情報がある場合のレンダリング\n  return (\n    <div>\n      <h1>User Profile</h1>\n      {/* ここでユーザー情報を表示 */}\n      <p>ID: {user.id}</p>\n      <p>Name: {user.name}</p>\n      <p>Japanese Name: {user.jpName}</p>\n      <p>Age: {user.age}</p>\n      <p>Gender: {user.gender}</p>\n      {user.image && <img src={user.image} alt={`${user.name} profile`} />}\n      <p>Detail: {user.detail}</p>\n      <p>Joining Date: {user.joiningDate}</p>\n      <p>Employment Type: {user.employmentType}</p>\n      <p>Permission Level: {user.permissionLevel}</p>\n    </div>\n  );\n}\n\nexport default UserProfile;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/tatsuki/EmployeeManagementSystem/ems/src/UserProfile.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\n// useParamsによって返されるパラメーターの型を定義します。\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UserProfile() {\n  _s();\n  const {\n    userId\n  } = useParams(); // URLからuserIdを取得\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchUserData = async () => {\n      try {\n        await fetch(\"https://sheets.googleapis.com/v4/spreadsheets/1yajpuM9YfEqlHgGbDxYVQOcHrFfJYoTho1b1qoOME6Y/values/%E3%82%B7%E3%83%BC%E3%83%881?key=AIzaSyBoGN_ggnHtfZrcL1FX81HSWzQirXL8eyg\");\n        const data = await response.json();\n        const userData = data.values.find(row => row[0] === userId);\n        setUser(userData);\n      } catch (error) {\n        // エラーハンドリング\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchUserData();\n  }, [userId]);\n\n  // userがnullの場合のチェックまたはローディング状態の表示\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading user data...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 23\n  }, this);\n  if (!user) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"User not found\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"User Profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Name: \", user[1]]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(UserProfile, \"AAtcRp5zw4kgD0nAoHemtUZg/9I=\", false, function () {\n  return [useParams];\n});\n_c = UserProfile;\nexport default UserProfile;\nvar _c;\n$RefreshReg$(_c, \"UserProfile\");","map":{"version":3,"names":["React","useEffect","useState","useParams","jsxDEV","_jsxDEV","UserProfile","_s","userId","user","setUser","loading","setLoading","fetchUserData","fetch","data","response","json","userData","values","find","row","error","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/tatsuki/EmployeeManagementSystem/ems/src/UserProfile.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\n// useParamsによって返されるパラメーターの型を定義します。\ntype Params = {\n  userId: string;\n};\n\nfunction UserProfile() {\n  const { userId } = useParams<Params>(); // URLからuserIdを取得\n  const [user, setUser] = useState<string[] | null>(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchUserData = async () => {\n      try {\n        await fetch(\n          \"https://sheets.googleapis.com/v4/spreadsheets/1yajpuM9YfEqlHgGbDxYVQOcHrFfJYoTho1b1qoOME6Y/values/%E3%82%B7%E3%83%BC%E3%83%881?key=AIzaSyBoGN_ggnHtfZrcL1FX81HSWzQirXL8eyg\"\n        );\n        const data = await response.json();\n        const userData = data.values.find((row: string[]) => row[0] === userId);\n        setUser(userData);\n      } catch (error) {\n        // エラーハンドリング\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchUserData();\n  }, [userId]);\n\n  // userがnullの場合のチェックまたはローディング状態の表示\n  if (loading) return <div>Loading user data...</div>;\n  if (!user) return <div>User not found</div>;\n\n  return (\n    <div>\n      <h1>User Profile</h1>\n      <p>Name: {user[1]}</p>\n      {/* その他のユーザー情報 */}\n    </div>\n  );\n}\n\nexport default UserProfile;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;;AAE5C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAKA,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACrB,MAAM;IAAEC;EAAO,CAAC,GAAGL,SAAS,CAAS,CAAC,CAAC,CAAC;EACxC,MAAM,CAACM,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAkB,IAAI,CAAC;EACvD,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACd,MAAMY,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACF,MAAMC,KAAK,CACT,4KACF,CAAC;QACD,MAAMC,IAAI,GAAG,MAAMC,QAAQ,CAACC,IAAI,CAAC,CAAC;QAClC,MAAMC,QAAQ,GAAGH,IAAI,CAACI,MAAM,CAACC,IAAI,CAAEC,GAAa,IAAKA,GAAG,CAAC,CAAC,CAAC,KAAKb,MAAM,CAAC;QACvEE,OAAO,CAACQ,QAAQ,CAAC;MACnB,CAAC,CAAC,OAAOI,KAAK,EAAE;QACd;MAAA,CACD,SAAS;QACRV,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDC,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,CAACL,MAAM,CAAC,CAAC;;EAEZ;EACA,IAAIG,OAAO,EAAE,oBAAON,OAAA;IAAAkB,QAAA,EAAK;EAAoB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EACnD,IAAI,CAAClB,IAAI,EAAE,oBAAOJ,OAAA;IAAAkB,QAAA,EAAK;EAAc;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EAE3C,oBACEtB,OAAA;IAAAkB,QAAA,gBACElB,OAAA;MAAAkB,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrBtB,OAAA;MAAAkB,QAAA,GAAG,QAAM,EAACd,IAAI,CAAC,CAAC,CAAC;IAAA;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEnB,CAAC;AAEV;AAACpB,EAAA,CAnCQD,WAAW;EAAA,QACCH,SAAS;AAAA;AAAAyB,EAAA,GADrBtB,WAAW;AAqCpB,eAAeA,WAAW;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
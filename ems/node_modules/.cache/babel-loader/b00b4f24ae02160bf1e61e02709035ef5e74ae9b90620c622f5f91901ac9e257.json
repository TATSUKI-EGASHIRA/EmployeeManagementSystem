{"ast":null,"code":"var _jsxFileName = \"/Users/tatsuki/EmployeeManagementSystem/ems/src/UserProfile.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UserProfile() {\n  _s();\n  const {\n    userId\n  } = useParams();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // useEffect(() => {\n  //   const fetchUserData = async () => {\n  //     setLoading(true); // ローディング状態の開始\n  //     try {\n  //       // APIからのレスポンスを待ちます。\n  //       const response = await fetch(\n  //         \"https://sheets.googleapis.com/v4/spreadsheets/1yajpuM9YfEqlHgGbDxYVQOcHrFfJYoTho1b1qoOME6Y/values/%E3%82%B7%E3%83%BC%E3%83%881?key=AIzaSyBoGN_ggnHtfZrcL1FX81HSWzQirXL8eyg\"\n  //       );\n  //       // レスポンスのJSONを取得します。\n  //       const data = await response.json();\n  //       // データからuserIdに該当するユーザー情報を検索します。\n  //       const userData = data.values.find((row: string[]) => row[0] === userId);\n  //       setUser(userData); // ユーザーデータをセットします。\n  //     } catch (error) {\n  //       console.error(\"An error occurred while fetching user data:\", error);\n  //     } finally {\n  //       setLoading(false); // ローディング状態の終了\n  //     }\n  //   };\n\n  //   fetchUserData();\n  // }, [userId]);\n\n  useEffect(() => {\n    const fetchUserData = async () => {\n      try {\n        // fetch処理...\n        const response = await fetch(\"https://sheets.googleapis.com/v4/spreadsheets/1yajpuM9YfEqlHgGbDxYVQOcHrFfJYoTho1b1qoOME6Y/values/%E3%82%B7%E3%83%BC%E3%83%881?key=AIzaSyBoGN_ggnHtfZrcL1FX81HSWzQirXL8eyg\");\n        const data = await response.json();\n        console.log(data); // 返されたデータをチェック\n        console.log(\"UserID:\", userId); // 取得したユーザーIDをチェック\n\n        // ユーザーデータが見つかるかチェック\n        const userData = data.values.find(row => {\n          // この比較で型の不一致がないかチェック\n          return String(row[0]) === String(userId);\n        });\n        if (userData) {\n          setUser(userData);\n        } else {\n          // ユーザーデータが見つからない場合の処理\n          setError(\"User not found\");\n        }\n      } catch (e) {\n        // エラー処理\n        console.error(\"An error occurred while fetching user data\", e);\n        setError(\"An error occurred while fetching user data\");\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchUserData();\n  }, [userId]);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading user data...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 23\n  }, this);\n  if (!user) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"User not found\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"User Profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Name: \", user && user[1]]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}\n_s(UserProfile, \"Xju/9qJDv35H2fcWnYSs6+QCewA=\", false, function () {\n  return [useParams];\n});\n_c = UserProfile;\nexport default UserProfile;\nvar _c;\n$RefreshReg$(_c, \"UserProfile\");","map":{"version":3,"names":["React","useEffect","useState","useParams","jsxDEV","_jsxDEV","UserProfile","_s","userId","user","setUser","loading","setLoading","error","setError","fetchUserData","response","fetch","data","json","console","log","userData","values","find","row","String","e","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/tatsuki/EmployeeManagementSystem/ems/src/UserProfile.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\ntype Params = {\n  userId: string;\n};\n\nfunction UserProfile() {\n  const { userId } = useParams<Params>();\n  const [user, setUser] = useState<string[] | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  // useEffect(() => {\n  //   const fetchUserData = async () => {\n  //     setLoading(true); // ローディング状態の開始\n  //     try {\n  //       // APIからのレスポンスを待ちます。\n  //       const response = await fetch(\n  //         \"https://sheets.googleapis.com/v4/spreadsheets/1yajpuM9YfEqlHgGbDxYVQOcHrFfJYoTho1b1qoOME6Y/values/%E3%82%B7%E3%83%BC%E3%83%881?key=AIzaSyBoGN_ggnHtfZrcL1FX81HSWzQirXL8eyg\"\n  //       );\n  //       // レスポンスのJSONを取得します。\n  //       const data = await response.json();\n  //       // データからuserIdに該当するユーザー情報を検索します。\n  //       const userData = data.values.find((row: string[]) => row[0] === userId);\n  //       setUser(userData); // ユーザーデータをセットします。\n  //     } catch (error) {\n  //       console.error(\"An error occurred while fetching user data:\", error);\n  //     } finally {\n  //       setLoading(false); // ローディング状態の終了\n  //     }\n  //   };\n\n  //   fetchUserData();\n  // }, [userId]);\n\n  useEffect(() => {\n    const fetchUserData = async () => {\n      try {\n        // fetch処理...\n        const response = await fetch(\n          \"https://sheets.googleapis.com/v4/spreadsheets/1yajpuM9YfEqlHgGbDxYVQOcHrFfJYoTho1b1qoOME6Y/values/%E3%82%B7%E3%83%BC%E3%83%881?key=AIzaSyBoGN_ggnHtfZrcL1FX81HSWzQirXL8eyg\"\n        );\n        const data = await response.json();\n        console.log(data); // 返されたデータをチェック\n        console.log(\"UserID:\", userId); // 取得したユーザーIDをチェック\n\n        // ユーザーデータが見つかるかチェック\n        const userData = data.values.find((row: string[]) => {\n          // この比較で型の不一致がないかチェック\n          return String(row[0]) === String(userId);\n        });\n        if (userData) {\n          setUser(userData);\n        } else {\n          // ユーザーデータが見つからない場合の処理\n          setError(\"User not found\");\n        }\n      } catch (e) {\n        // エラー処理\n        console.error(\"An error occurred while fetching user data\", e);\n        setError(\"An error occurred while fetching user data\");\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchUserData();\n  }, [userId]);\n\n  if (loading) return <div>Loading user data...</div>;\n  if (!user) return <div>User not found</div>;\n\n  return (\n    <div>\n      <h1>User Profile</h1>\n      {/* userがnullではないことが保証されているので、nullチェックをせずにアクセスします */}\n      <p>Name: {user && user[1]}</p>\n      {/* その他のユーザー情報 */}\n    </div>\n  );\n}\n\nexport default UserProfile;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAM7C,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACrB,MAAM;IAAEC;EAAO,CAAC,GAAGL,SAAS,CAAS,CAAC;EACtC,MAAM,CAACM,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAkB,IAAI,CAAC;EACvD,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAgB,IAAI,CAAC;;EAEvD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;;EAEAD,SAAS,CAAC,MAAM;IACd,MAAMc,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACF;QACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,4KACF,CAAC;QACD,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAClCC,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC,CAAC,CAAC;QACnBE,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEb,MAAM,CAAC,CAAC,CAAC;;QAEhC;QACA,MAAMc,QAAQ,GAAGJ,IAAI,CAACK,MAAM,CAACC,IAAI,CAAEC,GAAa,IAAK;UACnD;UACA,OAAOC,MAAM,CAACD,GAAG,CAAC,CAAC,CAAC,CAAC,KAAKC,MAAM,CAAClB,MAAM,CAAC;QAC1C,CAAC,CAAC;QACF,IAAIc,QAAQ,EAAE;UACZZ,OAAO,CAACY,QAAQ,CAAC;QACnB,CAAC,MAAM;UACL;UACAR,QAAQ,CAAC,gBAAgB,CAAC;QAC5B;MACF,CAAC,CAAC,OAAOa,CAAC,EAAE;QACV;QACAP,OAAO,CAACP,KAAK,CAAC,4CAA4C,EAAEc,CAAC,CAAC;QAC9Db,QAAQ,CAAC,4CAA4C,CAAC;MACxD,CAAC,SAAS;QACRF,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDG,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,CAACP,MAAM,CAAC,CAAC;EAEZ,IAAIG,OAAO,EAAE,oBAAON,OAAA;IAAAuB,QAAA,EAAK;EAAoB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EACnD,IAAI,CAACvB,IAAI,EAAE,oBAAOJ,OAAA;IAAAuB,QAAA,EAAK;EAAc;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EAE3C,oBACE3B,OAAA;IAAAuB,QAAA,gBACEvB,OAAA;MAAAuB,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAErB3B,OAAA;MAAAuB,QAAA,GAAG,QAAM,EAACnB,IAAI,IAAIA,IAAI,CAAC,CAAC,CAAC;IAAA;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAE3B,CAAC;AAEV;AAACzB,EAAA,CA1EQD,WAAW;EAAA,QACCH,SAAS;AAAA;AAAA8B,EAAA,GADrB3B,WAAW;AA4EpB,eAAeA,WAAW;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}